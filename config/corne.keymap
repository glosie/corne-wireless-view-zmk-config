/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        lt_bspc: layer_tap_bspc_del {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_BACKSPACE_DELETE";
            #binding-cells = <2>;
            bindings = <&mo>, <&bspc_del>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
        };

        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rpi: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        volume_mute: volume_mute {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp C_VOL_DN>, <&kp C_MUTE>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |   TAB    |  Q  |  W  |  E  |  R  |  T   |   |  Y  |  U   |  I  |  O  |  P  |   -    |
            // |   ALT    |  A  |  S  |  D  |  F  |  G   |   |  H  |  J   |  K  |  L  |  ;  |   '    |
            // | SHFT/ESC |  Z  |  X  |  C  |  V  |  B   |   |  N  |  M   |  ,  |  .  |  /  | SHFT/` |
            //          | GUI | LWR/BSPC/DEL | CTRL/SPC  |   | ENT | RSE  | CTL |

            display-name = "Base";
            bindings = <
&kp TAB        &kp Q  &kp W  &kp E     &kp R         &kp T               &kp Y    &kp U  &kp I      &kp O    &kp P     &kp MINUS
&kp LALT       &kp A  &kp S  &kp D     &kp F         &kp G               &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&mt LSHFT ESC  &kp Z  &kp X  &kp C     &kp V         &kp B               &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mt RSHIFT GRAVE
                             &kp LGUI  &lt_bspc 1 0  &rpi LCTRL SPACE    &kp RET  &mo 2  &kp RCTRL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |     |      |  UP  |       |     |     |   |     |  7  |  8  |  9  |  *  |    =    |
            // |     | LEFT | DOWN | RIGHT |     |     |   |     |  4  |  5  |  6  |  +  |    \    |
            // |     |      |      |       |     |     |   |     |  1  |  2  |  3  |  ^  | SHIFT/| |
            //                     |       |     |     |   |     |     |  0  |

            display-name = "Lower";
            bindings = <
&trans  &trans    &kp UP    &trans     &trans  &trans    &trans  &kp N7  &kp N8  &kp N9  &kp KP_MULTIPLY  &kp EQUAL
&trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans    &trans  &kp N4  &kp N5  &kp N6  &kp PLUS         &kp BSLH
&trans  &trans    &trans    &trans     &trans  &trans    &trans  &kp N1  &kp N2  &kp N3  &kp CARET        &mt RSHIFT PIPE
                            &trans     &trans  &trans    &trans  &trans  &kp N0
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&trans  &kp EXCL &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &trans   &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &trans   &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                &trans    &to 3     &trans       &trans     &trans     &kp RALT
            >;
        };

        function_layer {
            display-name = "Function";
            bindings = <
&trans      &kp F13        &kp F14     &trans  &trans  &trans    &trans            &trans        &trans           &trans      &trans  &trans
&bt BT_CLR  &bt BT_PRV     &bt BT_NXT  &trans  &trans  &trans    &kp C_PREV        &volume_mute  &kp C_VOLUME_UP  &kp C_NEXT  &trans  &trans
&trans      &studio_unlock &trans      &trans  &trans  &trans    &trans            &trans        &trans           &trans      &trans  &trans
                                       &trans  &to 0   &trans    &kp C_PLAY_PAUSE  &trans        &trans
            >;
        };
    };
};
